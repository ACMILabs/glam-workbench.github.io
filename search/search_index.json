{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to the wonderful world of GLAM data! \u00b6 Here you\u2019ll find a collection of tools and examples to help you work with data from galleries, libraries, archives, and museums (the GLAM sector), focusing on Australia and New Zealand. What is GLAM data? \u00b6 When we talk about GLAM data we\u2019re usually referring to the collections held by cultural institutions \u2013 books, manuscripts, photographs, objects, and much more. We\u2019re used to exploring these collections through online search interfaces or finding aids, but sometimes we want to do more \u2013 instead of a list of search results on a web page, we want access to the underlying collection data for analysis, enrichment, or visualisation. We want collections as data . This GLAM Workbench shows you how to create your own research datasets from a variety of GLAM collections. In some cases cultural institutions provide direct access to collection data through APIs (Application Programming Interfaces) or data downloads. In other cases we have to find ways of extracting data from web interfaces \u2013 a process known as screen-scraping. Here you\u2019ll find examples of all these approaches, as well as links to a number of pre-harvested datasets. What can I do with GLAM data? \u00b6 Ask different types of questions! Shift scales Find patterns Extract features Make connections This GLAM Workbench demonstrates a variety of tools and techniques that you can use to explore your data. Do I need to be able to code? \u00b6 No, you can use the Jupyter notebooks within the workbench without any coding experience \u2013 just edit and click where indicated. But every time you do edit one of the notebooks, you are coding. The notebooks provide an opportunity to gain confidence and experiment. They might not turn you into a coder, but they will show you how to do useful things with code. What is Jupyter? \u00b6 Where do I start? \u00b6 Other useful resources \u00b6","title":"Home"},{"location":"#welcome-to-the-wonderful-world-of-glam-data","text":"Here you\u2019ll find a collection of tools and examples to help you work with data from galleries, libraries, archives, and museums (the GLAM sector), focusing on Australia and New Zealand.","title":"Welcome to the wonderful world of GLAM data!"},{"location":"#what-is-glam-data","text":"When we talk about GLAM data we\u2019re usually referring to the collections held by cultural institutions \u2013 books, manuscripts, photographs, objects, and much more. We\u2019re used to exploring these collections through online search interfaces or finding aids, but sometimes we want to do more \u2013 instead of a list of search results on a web page, we want access to the underlying collection data for analysis, enrichment, or visualisation. We want collections as data . This GLAM Workbench shows you how to create your own research datasets from a variety of GLAM collections. In some cases cultural institutions provide direct access to collection data through APIs (Application Programming Interfaces) or data downloads. In other cases we have to find ways of extracting data from web interfaces \u2013 a process known as screen-scraping. Here you\u2019ll find examples of all these approaches, as well as links to a number of pre-harvested datasets.","title":"What is GLAM data?"},{"location":"#what-can-i-do-with-glam-data","text":"Ask different types of questions! Shift scales Find patterns Extract features Make connections This GLAM Workbench demonstrates a variety of tools and techniques that you can use to explore your data.","title":"What can I do with GLAM data?"},{"location":"#do-i-need-to-be-able-to-code","text":"No, you can use the Jupyter notebooks within the workbench without any coding experience \u2013 just edit and click where indicated. But every time you do edit one of the notebooks, you are coding. The notebooks provide an opportunity to gain confidence and experiment. They might not turn you into a coder, but they will show you how to do useful things with code.","title":"Do I need to be able to code?"},{"location":"#what-is-jupyter","text":"","title":"What is Jupyter?"},{"location":"#where-do-i-start","text":"","title":"Where do I start?"},{"location":"#other-useful-resources","text":"","title":"Other useful resources"},{"location":"digitalnz/","text":"Big pictures \u00b6 Getting some top-level data from the DigitalNZ API Visualise a search in Papers Past Download data \u00b6 Harvest data from Papers Past Tips, tools, and examples \u00b6 Find results by country in DigitalNZ","title":"DigitalNZ"},{"location":"digitalnz/#big-pictures","text":"Getting some top-level data from the DigitalNZ API Visualise a search in Papers Past","title":"Big pictures"},{"location":"digitalnz/#download-data","text":"Harvest data from Papers Past","title":"Download data"},{"location":"digitalnz/#tips-tools-and-examples","text":"Find results by country in DigitalNZ","title":"Tips, tools, and examples"},{"location":"getting-started/","text":"Some general tips: Code cells have boxes around them. When you hover over them a icon appears. To run a code cell either click the icon, or click on the cell and then hit Shift+Enter . The Shift+Enter combo will also move you to the next cell, so it\u2019s a quick way to work through the notebook. While a cell is running a * appears in the square brackets next to the cell. Once the cell has finished running the asterix will be replaced with a number. In most cases you\u2019ll want to start from the top of notebook and work your way down running each cell in turn. Later cells might depend on the results of earlier ones. To edit a code cell, just click on it and type stuff. Remember to run the cell once you\u2019ve finished editing. Running notebooks live on Binder \u00b6 Running notebooks in \u2018app mode\u2019 \u00b6 Some of the workbench repositories make use of the appmode extension for Jupyter notebooks. When you open a notebook in app mode, all the code cells are hidden and are run automatically as the notebook loads. This means you can make a notebook available with a nice clean interface for those who might be a little intimidated by a page full of code. But the code is still there. To view the underlying notebook, just click on the 'Edit App' button at the top of the page. There are two ways to open a notebook in app mode. Running notebooks on your own computer \u00b6","title":"Getting started"},{"location":"getting-started/#running-notebooks-live-on-binder","text":"","title":"Running notebooks live on Binder"},{"location":"getting-started/#running-notebooks-in-app-mode","text":"Some of the workbench repositories make use of the appmode extension for Jupyter notebooks. When you open a notebook in app mode, all the code cells are hidden and are run automatically as the notebook loads. This means you can make a notebook available with a nice clean interface for those who might be a little intimidated by a page full of code. But the code is still there. To view the underlying notebook, just click on the 'Edit App' button at the top of the page. There are two ways to open a notebook in app mode.","title":"Running notebooks in &lsquo;app mode&rsquo;"},{"location":"getting-started/#running-notebooks-on-your-own-computer","text":"","title":"Running notebooks on your own computer"},{"location":"recordsearch/","text":"RecordSearch \u00b6 RecordSearch is the online collection database of the National Archives of Australia. Based on the series system , RecordSearch provides rich, contextual information about series, items, agencies, and functions. Unfortunately RecordSearch doesn't provide access to machine-readable data through an API, so we have to resort to screen scraping. The notebooks here all make use of the RecordSearch Tools library to handle the scraping. Tools, tips, and examples \u00b6 Harvesting a series Harvest details of all items in a series and download images from any digitised files. Series with more than 20,000 items can be a bit tricky, but some strategies for dealing with these are included as well. Harvest files with the access status of 'closed' The National Archives of Australia's RecordSearch database includes some information about files that we're not allowed to see. These files have been through the access examination process and ended up with an access status of 'closed'. While you can search by access status in RecordSearch, you can't explore the reasons, so if you want to dig any deeper you need to harvest the data. This notebook shows you how. Harvesting functions from the RecordSearch interface This notebook attempts to extract information from the RecordSearch interface about the hierarchy of functions it uses to describe the work of government agencies. Previous explorations have shown that the NAA's use of functions is rather inconsistent. All I'm doing here is finding out what functions RecordSearch itself says it is using. This may not be complete, but it seems like a useful starting point. How many of the functions are actually used? In this notebook we'll import data about functions that we've harvested earlier and search for each of these functions in RecordSearch to see how many are actually used. Harvest agencies associated with all functions This notebook loops through the list of functions that were extracted from the RecordSearch interface and saves basic details of the agencies responsible for each function. To keep down the file size and avoid too much duplication it doesn't include the full range of relationships that an agency might have. If you want the full agency data, use the app below to harvest agencies associated with an individual function or hierarchy. Useful apps \u00b6 These are Jupyter notebooks designed to run in 'app mode' with the code cells hidden. The Binder buttons will automatically open the notebooks in app mode, but you can always view and edit the code by clicking the 'Edit App' button. Download the contents of a digitised file RecordSearch lets you download a PDF of a digitised file, but sometimes it's more convenient to work with individual images. Just give this app the barcode of a digitised file and it will grab all the images as JPGs, zip them up into a folder, and generate a download link. Get a list of agencies associated with a function RecordSearch describes the business of government in terms of 'functions'. A function is an area of responsibility assigned to a particular government agency. Over time, functions change and move between agencies. If you're wanting to track particular areas of government activity, such as 'migration' or 'meteorology', it can be useful to start with functions, then follow the trail through agencies, series created by those agencies, and finally items contained within those series. This app makes it easy for you to download a list agencies associated with a particular function. Who's responsible The National Archives of Australia's RecordSearch database divides government activities up into a series of functions. Over time, different agencies have been made responsible for these functions, and it can be interesting to track how these responsibilities have shifted. This notebook uses data about functions harvested from RecordSearch to create a a simple visualisation of the agencies responsible for a selected function.","title":"RecordSearch"},{"location":"recordsearch/#recordsearch","text":"RecordSearch is the online collection database of the National Archives of Australia. Based on the series system , RecordSearch provides rich, contextual information about series, items, agencies, and functions. Unfortunately RecordSearch doesn't provide access to machine-readable data through an API, so we have to resort to screen scraping. The notebooks here all make use of the RecordSearch Tools library to handle the scraping.","title":"RecordSearch"},{"location":"recordsearch/#tools-tips-and-examples","text":"Harvesting a series Harvest details of all items in a series and download images from any digitised files. Series with more than 20,000 items can be a bit tricky, but some strategies for dealing with these are included as well. Harvest files with the access status of 'closed' The National Archives of Australia's RecordSearch database includes some information about files that we're not allowed to see. These files have been through the access examination process and ended up with an access status of 'closed'. While you can search by access status in RecordSearch, you can't explore the reasons, so if you want to dig any deeper you need to harvest the data. This notebook shows you how. Harvesting functions from the RecordSearch interface This notebook attempts to extract information from the RecordSearch interface about the hierarchy of functions it uses to describe the work of government agencies. Previous explorations have shown that the NAA's use of functions is rather inconsistent. All I'm doing here is finding out what functions RecordSearch itself says it is using. This may not be complete, but it seems like a useful starting point. How many of the functions are actually used? In this notebook we'll import data about functions that we've harvested earlier and search for each of these functions in RecordSearch to see how many are actually used. Harvest agencies associated with all functions This notebook loops through the list of functions that were extracted from the RecordSearch interface and saves basic details of the agencies responsible for each function. To keep down the file size and avoid too much duplication it doesn't include the full range of relationships that an agency might have. If you want the full agency data, use the app below to harvest agencies associated with an individual function or hierarchy.","title":"Tools, tips, and examples"},{"location":"recordsearch/#useful-apps","text":"These are Jupyter notebooks designed to run in 'app mode' with the code cells hidden. The Binder buttons will automatically open the notebooks in app mode, but you can always view and edit the code by clicking the 'Edit App' button. Download the contents of a digitised file RecordSearch lets you download a PDF of a digitised file, but sometimes it's more convenient to work with individual images. Just give this app the barcode of a digitised file and it will grab all the images as JPGs, zip them up into a folder, and generate a download link. Get a list of agencies associated with a function RecordSearch describes the business of government in terms of 'functions'. A function is an area of responsibility assigned to a particular government agency. Over time, functions change and move between agencies. If you're wanting to track particular areas of government activity, such as 'migration' or 'meteorology', it can be useful to start with functions, then follow the trail through agencies, series created by those agencies, and finally items contained within those series. This app makes it easy for you to download a list agencies associated with a particular function. Who's responsible The National Archives of Australia's RecordSearch database divides government activities up into a series of functions. Over time, different agencies have been made responsible for these functions, and it can be interesting to track how these responsibilities have shifted. This notebook uses data about functions harvested from RecordSearch to create a a simple visualisation of the agencies responsible for a selected function.","title":"Useful apps"},{"location":"tepapa/","text":"Tips, tools, and examples \u00b6 Exploring the Te Papa collection API Mapping Te Papa's collections","title":"Te Papa"},{"location":"tepapa/#tips-tools-and-examples","text":"Exploring the Te Papa collection API Mapping Te Papa's collections","title":"Tips, tools, and examples"},{"location":"trove-harvester/","text":"","title":"Trove newspaper harvester"},{"location":"trove-lists/","text":"Trove lists are user created collections of items. The details of public lists are available through the Trove API. Big pictures \u00b6 Harvest summary data from Trove lists Use the Trove API to harvest data about all public lists, then extract some summary data and explore a few different techniques to analyse the complete dataset. Tips, tools, and examples \u00b6 Convert a Trove list into a CSV file Use the Trove API to save the contents of a public list to a CSV file.","title":"Trove lists"},{"location":"trove-lists/#big-pictures","text":"Harvest summary data from Trove lists Use the Trove API to harvest data about all public lists, then extract some summary data and explore a few different techniques to analyse the complete dataset.","title":"Big pictures"},{"location":"trove-lists/#tips-tools-and-examples","text":"Convert a Trove list into a CSV file Use the Trove API to save the contents of a public list to a CSV file.","title":"Tips, tools, and examples"},{"location":"trove-newspapers/","text":"Assorted experiments and examples working with Trove\u2019s digitised newspapers Tips, tools, and examples \u00b6 Map Trove newspaper results by state Uses the Trove state facet to create a choropleth map that visualises the number of search results per state. Map Trove newspaper results by place of publication Uses the Trove title facet to find the number of results per newspaper, then Map Trove newspaper results by place of publication over time Today\u2019s news yesterday Uses the date index and the firstpageseq parameter to find articles from exactly 100 years ago that were published on the front page. It then selects one of the articles at random and downloads and displays an image of the front page. Create a Trove OCR corrections ticker Uses the has:corrections parameter to get the total number of newspaper articles with OCR corrections, then displays the results, updating every five seconds. Useful apps \u00b6 These are Jupyter notebooks designed to run in \u2018app mode\u2019 with the code cells hidden. The Binder buttons will automatically open the notebooks in app mode, but you can always view and edit the code by clicking the \u2018Edit App\u2019 button. Download a page image The Trove web interface doesn\u2019t provide a way of getting high-resolution page images from newspapers. This simple app lets you download page images as complete, high-resolution JPG files.","title":"Trove newspapers"},{"location":"trove-newspapers/#tips-tools-and-examples","text":"Map Trove newspaper results by state Uses the Trove state facet to create a choropleth map that visualises the number of search results per state. Map Trove newspaper results by place of publication Uses the Trove title facet to find the number of results per newspaper, then Map Trove newspaper results by place of publication over time Today\u2019s news yesterday Uses the date index and the firstpageseq parameter to find articles from exactly 100 years ago that were published on the front page. It then selects one of the articles at random and downloads and displays an image of the front page. Create a Trove OCR corrections ticker Uses the has:corrections parameter to get the total number of newspaper articles with OCR corrections, then displays the results, updating every five seconds.","title":"Tips, tools, and examples"},{"location":"trove-newspapers/#useful-apps","text":"These are Jupyter notebooks designed to run in \u2018app mode\u2019 with the code cells hidden. The Binder buttons will automatically open the notebooks in app mode, but you can always view and edit the code by clicking the \u2018Edit App\u2019 button. Download a page image The Trove web interface doesn\u2019t provide a way of getting high-resolution page images from newspapers. This simple app lets you download page images as complete, high-resolution JPG files.","title":"Useful apps"},{"location":"trove/","text":"Trove provides access to much of it's data through an API (Application Programming Interface). The notebooks in this section provide many examples of using the API to harvest data and analyse the contents of Trove. Before you can use the API you need to obtain a key \u2014 it's free and quick. Just follow these instructions . Useful links \u00b6 Trove API Documentation Trove API console","title":"Trove API introduction"},{"location":"trove/#useful-links","text":"Trove API Documentation Trove API console","title":"Useful links"}]}